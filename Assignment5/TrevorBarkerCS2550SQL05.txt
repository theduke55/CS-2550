/* 1. List the full name and phone number for students that live in Newark, NJ.
Sort on last name and first name. */
SELECT first_name, last_name, phone
FROM student s INNER JOIN zipcode z
  ON s.zip = z.zip
WHERE city = 'Newark'
AND state = 'NJ'
ORDER BY last_name, first_name;

/* 2. For all 300 level courses (300-399), list the course number, prerequisite 
course number and prerequisite course description. Sort by course number. */
SELECT c.course_no, p.course_no, p.description
FROM course c INNER JOIN course p
  ON c.prerequisite = p.course_no
WHERE c.course_no LIKE '3%'
ORDER BY c.course_no;

/* 3. List the course number and description for all 100-level courses taught by Charles Lowry. 
Arrange the list in order of course number. */
SELECT c.course_no, c.description
FROM course c INNER JOIN section s
  ON c.course_no = s.course_no
INNER JOIN instructor i
  ON s.instructor_id = i.instructor_id
WHERE c.course_no LIKE '1%'
AND first_name = 'Charles'
AND last_name = 'Lowry'
ORDER BY c.course_no;

/* 4. List the grade type code, description and number per section of all grade types in course 144. Arrange by description. */
SELECT t.grade_type_code, description, number_per_section
FROM grade_type t INNER JOIN grade_type_weight g
  ON t.grade_type_code = g.grade_type_code
INNER JOIN section s
  ON g.section_id = s.section_id
WHERE s.course_no = 144
ORDER BY description;

/* 5. Provide an alphabetic list of students (student last name followed by first name) 
who have an overall grade average of 93 or higher. The name should be one column, last name 
first and sorted on last name then first name. */
SELECT last_name||', '||first_name AS student_name
FROM student s INNER JOIN enrollment e
  ON s.student_id = e.student_id
INNER JOIN grade g
  ON e.student_id = g.student_id
  AND e.section_id = g.section_id
GROUP BY last_name||', '||first_name
HAVING AVG(numeric_grade) >= 93
ORDER BY student_name;

/* 6. List the names and address (including city and state) for all faculty who have taught less than 10 course sections. */
SELECT first_name, last_name, street_address, city, state, z.zip
FROM section s INNER JOIN instructor i
  ON s.instructor_id = i.instructor_id
INNER JOIN zipcode z
  ON i.zip = z.zip
GROUP BY first_name, last_name, street_address, city, state, z.zip
HAVING COUNT(*) < 10;

/* 7. List the course number and number of students enrolled in courses that don’t have a prerequisite. 
Sort the list by number of students enrolled from highest to lowest. */
SELECT c.course_no, COUNT(*) AS enrolled
FROM course c INNER JOIN section s
  ON c.course_no = s.course_no
INNER JOIN enrollment e
  ON s.section_id = e.section_id
WHERE c.prerequisite IS NULL
GROUP BY c.course_no
ORDER BY enrolled DESC;

/* 8. Provide an alphabetic list of students (first and last name and phone number) 
from Flushing, NY who enrolled prior to 10:20am on February 2, 2007. */
SELECT DISTINCT first_name, last_name, phone
FROM student s INNER JOIN enrollment e
  ON s.student_id = e.student_id
INNER JOIN zipcode z
  ON s.zip = z.zip
WHERE city = 'Flushing'
AND state = 'NY'
AND To_Char(enroll_date, 'Mon DD YYY HH:MI AM') < 'Feb 02 2007 10:20 AM';

/* 9. Provide a listing of courses that include projects as a part of their grading criteria. */
SELECT c.course_no
FROM course c INNER JOIN section s
  ON c.course_no = s.course_no
INNER JOIN grade_type_weight g
  ON s.section_id = g.section_id
WHERE grade_type_code = 'PJ'
ORDER BY c.course_no;

/* 10. List the highest grade on the final exam that was given to a student in course 145. */
SELECT MAX(numeric_grade) AS highest_final_grade
FROM section s INNER JOIN enrollment e
  ON s.section_id = e.section_id
INNER JOIN grade g
  ON e.student_id = g.student_id
  AND e.section_id = g.section_id
WHERE grade_type_code = 'FI'
AND s.course_no = 145